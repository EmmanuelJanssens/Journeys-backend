type POI {
    id: ID!
    name: String!
    coordinates: Coordinates! @relationship(type: "LOCATED_AT",direction:OUT)
    experiences: [Journey!]! @relationship(type: "EXPERIENCE",direction:IN, properties: "Experience")
}

type Journey{
    id: ID!
    title: String!
    start: Coordinates! @relationship(type: "START",direction:OUT)
    end: Coordinates! @relationship(type: "END",direction:OUT)
    experiences:  [POI!]! @relationship(type: "EXPERIENCE",direction:OUT, properties: "Experience")
    creator: User! @relationship(type: "CREATED",direction:IN)
}

type User{
    email: String!
    firstName: String!
    lastName: String!
    password: String!
    userName: String!
    journeys: [Journey!]! @relationship(type: "CREATED",direction:OUT)
}

type Coordinates {
    lat: Float
    lng: Float
}


enum SortDirection{
    ASC
    DESC
}

input POISort {
    name: SortDirection
}

interface Experience @relationshipProperties {
    date: DateTime
    description: String
    images: [String]
    order: Int
}